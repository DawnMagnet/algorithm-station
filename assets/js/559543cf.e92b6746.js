"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[6913],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,l=function(e,n){if(null==e)return{};var t,r,l={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(t),k=l,d=s["".concat(u,".").concat(k)]||s[k]||m[k]||a;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,o=new Array(a);o[0]=k;var i={};for(var u in n)hasOwnProperty.call(n,u)&&(i[u]=n[u]);i.originalType=e,i[s]="string"==typeof e?e:l,o[1]=i;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},9048:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var r=t(7462),l=(t(7294),t(3905));const a={},o="No.517 \u8d85\u7ea7\u6d17\u8863\u673a",i={unversionedId:"leetcode/2021/9/29",id:"leetcode/2021/9/29",title:"No.517 \u8d85\u7ea7\u6d17\u8863\u673a",description:"\u5047\u8bbe\u6709 n&nbsp;\u53f0\u8d85\u7ea7\u6d17\u8863\u673a\u653e\u5728\u540c\u4e00\u6392\u4e0a\u3002\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6bcf\u53f0\u6d17\u8863\u673a\u5185\u53ef\u80fd\u6709\u4e00\u5b9a\u91cf\u7684\u8863\u670d\uff0c\u4e5f\u53ef\u80fd\u662f\u7a7a\u7684\u3002",source:"@site/docs/leetcode/2021/9/29.md",sourceDirName:"leetcode/2021/9",slug:"/leetcode/2021/9/29",permalink:"/docs/leetcode/2021/9/29",draft:!1,editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/leetcode/2021/9/29.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.639 \u89e3\u7801\u65b9\u6cd5 II",permalink:"/docs/leetcode/2021/9/27"},next:{title:"12\u65e5 No.334 \u9012\u589e\u7684\u4e09\u5143\u5b50\u5e8f\u5217",permalink:"/docs/leetcode/2022/1/12"}},u={},p=[],c={toc:p},s="wrapper";function m(e){let{components:n,...t}=e;return(0,l.kt)(s,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"no517-\u8d85\u7ea7\u6d17\u8863\u673a"},"No.517 \u8d85\u7ea7\u6d17\u8863\u673a"),(0,l.kt)("p",null,"\u5047\u8bbe\u6709 ",(0,l.kt)("code",null,"n"),(0,l.kt)("strong",null,"\xa0"),"\u53f0\u8d85\u7ea7\u6d17\u8863\u673a\u653e\u5728\u540c\u4e00\u6392\u4e0a\u3002\u5f00\u59cb\u7684\u65f6\u5019\uff0c\u6bcf\u53f0\u6d17\u8863\u673a\u5185\u53ef\u80fd\u6709\u4e00\u5b9a\u91cf\u7684\u8863\u670d\uff0c\u4e5f\u53ef\u80fd\u662f\u7a7a\u7684\u3002"),(0,l.kt)("p",null,"\u5728\u6bcf\u4e00\u6b65\u64cd\u4f5c\u4e2d\uff0c\u4f60\u53ef\u4ee5\u9009\u62e9\u4efb\u610f ",(0,l.kt)("code",null,"m")," (",(0,l.kt)("code",null,"1 <= m <= n"),") \u53f0\u6d17\u8863\u673a\uff0c\u4e0e\u6b64\u540c\u65f6\u5c06\u6bcf\u53f0\u6d17\u8863\u673a\u7684\u4e00\u4ef6\u8863\u670d\u9001\u5230\u76f8\u90bb\u7684\u4e00\u53f0\u6d17\u8863\u673a\u3002"),(0,l.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4\xa0",(0,l.kt)("code",null,"machines")," \u4ee3\u8868\u4ece\u5de6\u81f3\u53f3\u6bcf\u53f0\u6d17\u8863\u673a\u4e2d\u7684\u8863\u7269\u6570\u91cf\uff0c\u8bf7\u7ed9\u51fa\u80fd\u8ba9\u6240\u6709\u6d17\u8863\u673a\u4e2d\u5269\u4e0b\u7684\u8863\u7269\u7684\u6570\u91cf\u76f8\u7b49\u7684 ",(0,l.kt)("strong",null,"\u6700\u5c11\u7684\u64cd\u4f5c\u6b65\u6570 "),"\u3002\u5982\u679c\u4e0d\u80fd\u4f7f\u6bcf\u53f0\u6d17\u8863\u673a\u4e2d\u8863\u7269\u7684\u6570\u91cf\u76f8\u7b49\uff0c\u5219\u8fd4\u56de ",(0,l.kt)("code",null,"-1")," \u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"machines = [1,0,5]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"3",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u7b2c\u4e00\u6b65:    1     0 <-- 5    =>    1     1     4 \u7b2c\u4e8c\u6b65:    1 <-- 1 <-- 4    =>    2     1     3 \u7b2c\u4e09\u6b65:    2     1 <-- 3    =>    2     2     2"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"machines = [0,3,0]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"2",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u7b2c\u4e00\u6b65:    0 <-- 3     0    =>    1     2     0 \u7b2c\u4e8c\u6b65:    1     2 --\x3e 0    =>    1     1     1"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 3\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"machines = [0,2,0]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"-1",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u4e0d\u53ef\u80fd\u8ba9\u6240\u6709\u4e09\u4e2a\u6d17\u8863\u673a\u540c\u65f6\u5269\u4e0b\u76f8\u540c\u6570\u91cf\u7684\u8863\u7269\u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"n == machines.length")),(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= n <= 10",(0,l.kt)("sup",null,"4"))),(0,l.kt)("li",null,(0,l.kt)("code",null,"0 <= machines[i] <= 10",(0,l.kt)("sup",null,"5")))),(0,l.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,l.kt)("p",null,"\u672c\u9898\u4e3b\u8981\u7684\u601d\u8def\u5c31\u662f\u904d\u5386\u3002\n\u5148\u904d\u5386\u4e00\u904d\uff0c\u6c42\u5f97\u662f\u5426\u6709\u53ef\u884c\u89e3\u4ee5\u53ca\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u7684\u5e73\u5747\u8863\u670d\u7684\u4ef6\u6570",(0,l.kt)("inlineCode",{parentName:"p"},"avg"),"\u662f\u591a\u5c11\u3002\n\u8fd9\u91cc\u80af\u5b9a\u5927\u5bb6\u90fd\u60f3\u5f97\u5230\u3002\u90a3\u4e48\u4e0b\u9762\u600e\u4e48\u529e\u5462\uff1f\n\u6211\u4eec\u77e5\u9053\uff0c\u5982\u679c\u8863\u670d\u591a\uff0c\u5047\u8bbe\u4e00\u4e2a\u4f4d\u7f6e\u4e0a\u6709",(0,l.kt)("inlineCode",{parentName:"p"},"K"),"\u4ef6\u8863\u670d\uff0c\u800c",(0,l.kt)("inlineCode",{parentName:"p"},"K>avg"),",\u90a3\u4e48\u6211\u4eec\u6700\u7ec8\u7684\u7b54\u6848\u4e00\u5b9a\u4e0d\u4f1a\u5c0f\u4e8e",(0,l.kt)("inlineCode",{parentName:"p"},"K-avg"),"\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u8be5\u5806\u8863\u670d\u6765\u8bf4\uff0c\u4e0d\u8003\u8651\u5176\u4ed6\u6d17\u8863\u673a\u7684\u64cd\u4f5c\uff0c\u4ec5\u5bf9\u4e8e\u672c\u6d17\u8863\u673a\u800c\u8a00\uff0c\u4e00\u5b9a\u8981\u82b1\u8d39",(0,l.kt)("inlineCode",{parentName:"p"},"K-avg"),"\u7684\u65f6\u95f4\u5c06\u91cc\u9762\u591a\u51fa\u6765\u7684\u8863\u670d\u5206\u51fa\u53bb\u3002"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u672c\u9898\u6211\u4eec\u8fd8\u77e5\u9053\uff0c\u53ef\u4ee5\u5728\u904d\u5386\u6570\u7ec4\u7684\u65f6\u5019\u7ef4\u62a4\u4e00\u4e2a",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u3002\u5047\u8bbe\u6709\u4e00\u53ea\u65e0\u5f62\u7684\u5927\u624b\u5728\u904d\u5386\u6570\u7ec4\u7684\u540c\u65f6\u5c06\u6240\u6709\u6d17\u8863\u673a\u91cc\u8863\u670d\u7684\u6570\u91cf\u53d8\u6210\u4e86",(0,l.kt)("inlineCode",{parentName:"p"},"avg"),"\uff0c\u591a\u4f59\u7684\u8863\u670d\u5c31\u8ba4\u4e3a\u662f\u4f59\u91cf\uff0c\u7f3a\u5c11\u7684\u5c31\u8ba4\u4e3a\u662f\u7f3a\u53e3\u3002\u8fd9\u6837\u6709\u4e00\u4e2a\u597d\u5904\uff0c\u5c31\u662f\u80fd\u591f\u5404\u53f8\u5176\u804c\u3002\u4e0b\u9762\u7684\u4f8b\u5b50\u80fd\u591f\u52a0\u5f3a\u7406\u89e3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"\u793a\u4f8b\uff1a          [5, 0, 7], avg = 12 / 3 = 4\n\u5728\u904d\u5386\u65f6\u7684`cur`\u503c\uff1a[1, -3, 0]\n")),(0,l.kt)("p",null,"\u8fd9\u6837\u53ef\u4ee5\u53d1\u73b0\uff0c\u5bf9\u4e8e\u672c\u6570\u7ec4\u800c\u8a00\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u7684\u6700\u5927\u7edd\u5bf9\u503c\u5c31\u662f\u9700\u8981\u7684\u603b\u65f6\u95f4\u3002\u56e0\u4e3a\u6211\u4eec\u5982\u679c\u5355\u770b\u4e00\u4e2a1\u53f7\u4f4d\uff0c\u4e5f\u5c31\u662f\u4e2d\u95f4\u7684\u90a3\u4e00\u4f4d\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\uff0c\u4e00\u5b9a\u89814\u6b21\u586b\u5145\u624d\u80fd\u5c06\u5176\u586b\u5230",(0,l.kt)("inlineCode",{parentName:"p"},"avg"),"\u3002\u4f46\u662f\u8fd9\u56db\u6b21\u586b\u5145\u6709\u4e00\u6b21\u662f\u6765\u81ea\u5de6\u8fb9\uff0c\u4e09\u6b21\u662f\u6765\u81ea\u53f3\u8fb9\uff0c\u8fd9\u4e24\u6bb5\u65f6\u95f4\u662f\u53ef\u4ee5\u91cd\u53e0\u7684\u3002\u800c",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u503c\u5c31\u5f88\u597d\u7684\u5bf9\u4e8e\u7f3a\u53e3\u548c\u4f59\u91cf\u7684\u4f53\u73b0\u3002\u5f53\u904d\u5386\u5230\u8fd9\u4e00\u4f4d\uff0c\u7f3a\u53e3\u662fk\u65f6\uff0c\u8bf4\u660e\u4e4b\u524d\u7684\u6240\u6709\u6d17\u8863\u673a\u5c31\u7b97\u5185\u90e8\u5300\u4e00\u5300\u4e5f\u8fd8\u7f3ak\u4e2a\uff0c\u5fc5\u987b\u4ece",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u7684\u53f3\u65b9\u53bb\u79fb\u52a8\u8fc7\u6765\uff0c\u8fd9\u4e2ak\u5c31\u662f\u6700\u5c0f\u79fb\u52a8\u65f6\u95f4\u3002\u800c\u5f53\u4f59\u91cf\u662fk\u65f6\uff0c\u4e5f\u662f\u4e00\u6837\u7684\u9053\u7406\uff0c\u8bf4\u660e\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u53ca",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u7684\u5de6\u8fb9\u600e\u4e48\u5300\u90fd\u4f1a\u591a\u51fa\u6765k\u4e2a\uff0c\u5fc5\u987b\u8f6c\u79fb\u5230",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u7684\u53f3\u8fb9\uff0c\u800c\u8f6c\u79fb\u5fc5\u987b\u901a\u8fc7",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\uff0c\u4e5f\u5c31\u662f\u8bf4\u8fd9k\u4e2a\u8f6c\u79fb\u662f\u6ca1\u6709\u53e0\u52a0\u7684\u4f59\u5730\u7684\uff0c\u5fc5\u987b\u5728\u6700\u77ed\u4e3ak\u7684\u65f6\u95f4\u5185\u5b8c\u6210\u3002"),(0,l.kt)("p",null,"\u6240\u4ee5",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u53ef\u4ee5\u4f5c\u4e3a\u4e00\u4e2a\u5168\u5c40\u7684\u8f6c\u79fb\u6b21\u6570\u7684\u628a\u63a7\u3002\u4f46\u8fd8\u5b58\u5728\u4e00\u4e9b\u5c40\u9650\u3002\u770b\u4e0b\u9762\u4e00\u4e2a\u4f8b\u5b50"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},"\u793a\u4f8b\uff1a          [0, 3, 0], avg = 3 / 3 = 1\n\u5728\u904d\u5386\u65f6\u7684`cur`\u503c\uff1a[-1, 1, 0]\n")),(0,l.kt)("p",null,"\u8fd9\u4e2a\u793a\u4f8b\u6765\u770b\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u5ffd\u7565\u4e86\u4e00\u4e2a\u975e\u5e38\u5173\u952e\u7684\u70b9\uff0c\u4e5f\u5c31\u662f\u5bf9\u4e8e3\u800c\u8a00\uff0c\u5fc5\u987b\u82b1\u8d392\u6b21\u7684\u65f6\u95f4\u624d\u80fd\u5c06\u5176\u5b8c\u5168\u8f6c\u79fb\u51fa\u53bb\u3002\u4f46\u5bf9\u4e8e",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u6765\u8bf4\uff0c\u5b83\u5e76\u4e0d\u77e5\u9053\u81ea\u5df1\u6240\u904d\u5386\u5230\u7684-1\u548c1\u662f\u6ca1\u6cd5\u53e0\u52a0\u7684\uff0c\u90fd\u662f\u4ece3\u4e0a\u9762\u5206\u51fa\u6765\u7684\u3002\u90a3\u4e48\u8fd9\u65f6\u5019\u5c31\u9700\u8981\u540c\u8003\u8651",(0,l.kt)("inlineCode",{parentName:"p"},"cur"),"\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"K-avg"),"\u5bf9\u4e8e\u6700\u7ec8\u7ed3\u679c\u7684\u4f5c\u7528\u4e86\u3002"),(0,l.kt)("h1",{id:"rust\u4ee3\u7801"},"Rust\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"# struct Solution;\nimpl Solution {\n    pub fn find_min_moves(machines: Vec<i32>) -> i32 {\n        let sum: i32 = machines.iter().sum();\n        let n = machines.len() as i32;\n        if sum % n != 0 {\n            return -1;\n        } \n        let avg = sum / n;\n        let mut res = 0;\n        let mut cur = 0;\n        for mut m in machines {\n            m -= avg;\n            cur += m;\n            res = res.max(cur.abs()).max(m);\n        }\n        res\n    }\n}\n")),(0,l.kt)("h1",{id:"c\u4ee3\u7801"},"C++\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    int findMinMoves(vector<int>& m) {\n        int n = m.size();\n        int sum = 0;\n        for (auto & t : m) sum += t;\n        if (sum % n != 0) return -1;\n        int per = sum / n;\n        sum = 0;\n        int res = 0;\n        for (auto & t : m) {\n            t -= per;\n            sum += t;\n            res = max(res, abs(sum));\n            res = max(res, t);\n        }\n        return res;\n    }\n};\n")))}m.isMDXComponent=!0}}]);