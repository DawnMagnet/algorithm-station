"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[4114],{3905:function(t,e,n){n.d(e,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,l=function(t,e){if(null==t)return{};var n,r,l={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var i=r.createContext({}),c=function(t){var e=r.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},s=function(t){var e=c(t.components);return r.createElement(i.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,l=t.mdxType,o=t.originalType,i=t.parentName,s=u(t,["components","mdxType","originalType","parentName"]),d=c(n),f=l,k=d["".concat(i,".").concat(f)]||d[f]||p[f]||o;return n?r.createElement(k,a(a({ref:e},s),{},{components:n})):r.createElement(k,a({ref:e},s))}));function f(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var o=n.length,a=new Array(o);a[0]=d;var u={};for(var i in e)hasOwnProperty.call(e,i)&&(u[i]=e[i]);u.originalType=t,u.mdxType="string"==typeof t?t:l,a[1]=u;for(var c=2;c<o;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},236:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return u},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var r=n(7462),l=n(3366),o=(n(7294),n(3905)),a=["components"],u={},i="21\u65e5 No.1154 \u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929",c={unversionedId:"2021/12/No.1154",id:"2021/12/No.1154",title:"21\u65e5 No.1154 \u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929",description:"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32&nbsp;date \uff0c\u6309",source:"@site/docs/2021/12/21-No.1154.md",sourceDirName:"2021/12",slug:"/2021/12/No.1154",permalink:"/algorithm-station/docs/2021/12/No.1154",editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/2021/12/21-No.1154.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.475 \u4f9b\u6696\u5668",permalink:"/algorithm-station/docs/2021/12/No.475"},next:{title:"22\u65e5 No.686 \u91cd\u590d\u53e0\u52a0\u5b57\u7b26\u4e32\u5339\u914d",permalink:"/algorithm-station/docs/2021/12/No.686"}},s=[],p={toc:s};function d(t){var e=t.components,n=(0,l.Z)(t,a);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"21\u65e5-no1154-\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929"},"21\u65e5 No.1154 \u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929"),(0,o.kt)("div",{class:"content__1Y2H"},(0,o.kt)("div",{class:"notranslate"},(0,o.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u5b57\u7b26\u4e32\xa0",(0,o.kt)("code",null,"date")," \uff0c\u6309",(0,o.kt)("code",null,"YYYY-MM-DD")," \u683c\u5f0f\u8868\u793a\u4e00\u4e2a",(0,o.kt)("a",{href:"https://baike.baidu.com/item/\u516c\u5143/17855"},"\u73b0\u884c\u516c\u5143\u7eaa\u5e74\u6cd5"),"\u65e5\u671f\u3002\u8bf7\u4f60\u8ba1\u7b97\u5e76\u8fd4\u56de\u8be5\u65e5\u671f\u662f\u5f53\u5e74\u7684\u7b2c\u51e0\u5929\u3002"),(0,o.kt)("p",null,"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u8ba4\u4e3a 1 \u6708 1 \u65e5\u662f\u6bcf\u5e74\u7684\u7b2c 1 \u5929\uff0c1 \u6708 2 \u65e5\u662f\u6bcf\u5e74\u7684\u7b2c 2 \u5929\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u6bcf\u4e2a\u6708\u7684\u5929\u6570\u4e0e\u73b0\u884c\u516c\u5143\u7eaa\u5e74\u6cd5\uff08\u683c\u91cc\u9ad8\u5229\u5386\uff09\u4e00\u81f4\u3002"),(0,o.kt)("p",null,"\xa0"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),'date = "2019-01-09"',(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"9"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),'date = "2019-02-10"',(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"41"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 3\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),'date = "2003-03-01"',(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"60"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 4\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),'date = "2004-03-01"',(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"61"),(0,o.kt)("p",null,"\xa0"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("code",null,"date.length == 10")),(0,o.kt)("li",null,(0,o.kt)("code",null,"date[4] == date[7] == '-'"),"\uff0c\u5176\u4ed6\u7684\xa0",(0,o.kt)("code",null,"date[i]"),"\xa0\u90fd\u662f\u6570\u5b57"),(0,o.kt)("li",null,(0,o.kt)("code",null,"date")," \u8868\u793a\u7684\u8303\u56f4\u4ece 1900 \u5e74 1 \u6708 1 \u65e5\u81f3 2019 \u5e74 12 \u6708 31 \u65e5")))),(0,o.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,o.kt)("p",null,"\u5148\u62c6\u5206\uff0c\u518d\u5224\u65ad\u95f0\u5e74\uff0c\u6700\u540e\u6c42\u548c\u5373\u53ef"),(0,o.kt)("h1",{id:"\u4ee3\u7801rust"},"\u4ee3\u7801(Rust)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"impl Solution {\n    pub fn day_of_year(date: String) -> i32 {\n        let v: Vec<i32> = date.split('-').map(|x| x.parse().unwrap()).collect();\n        let mut days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n        if v[1] > 2 && v[0] % 4 == 0 && (v[0] % 100 != 0 || v[0] % 400 == 0) {\n            days[1] += 1;\n        }\n        &days[0..(v[1] as usize - 1)].iter().sum() + v[2]\n    }\n}\n")),(0,o.kt)("h1",{id:"\u4ee3\u7801golang"},"\u4ee3\u7801(Golang)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'func dayOfYear(date string) int {\n    t, _ := time.Parse("2006-01-02", date)\n    return t.YearDay()\n}\n')))}d.isMDXComponent=!0}}]);