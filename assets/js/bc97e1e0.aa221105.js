"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[2251],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return k}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),u=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=u(e.components);return r.createElement(p.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),c=u(t),k=i,d=c["".concat(p,".").concat(k)]||c[k]||s[k]||a;return t?r.createElement(d,l(l({ref:n},m),{},{components:t})):r.createElement(d,l({ref:n},m))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=c;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var u=2;u<a;u++)l[u]=t[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},7138:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return u},toc:function(){return m},default:function(){return c}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={},p="14\u65e5 No.373 \u67e5\u627e\u548c\u6700\u5c0f\u7684 K \u5bf9\u6570\u5b57",u={unversionedId:"2022/1/14",id:"2022/1/14",title:"14\u65e5 No.373 \u67e5\u627e\u548c\u6700\u5c0f\u7684 K \u5bf9\u6570\u5b57",description:"\u539f\u8d34\u5730\u5740\uff1ahttps://dawnmagnet.github.io/algorithm-station/docs/2022/1/14",source:"@site/docs/2022/1/14.md",sourceDirName:"2022/1",slug:"/2022/1/14",permalink:"/algorithm-station/docs/2022/1/14",editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/2022/1/14.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"13\u65e5 No.747 \u81f3\u5c11\u662f\u5176\u4ed6\u6570\u5b57\u4e24\u500d\u7684\u6700\u5927\u6570",permalink:"/algorithm-station/docs/2022/1/13"},next:{title:"SUMMAR",permalink:"/algorithm-station/docs/special/SUMMAR"}},m=[],s={toc:m};function c(e){var n=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"14\u65e5-no373-\u67e5\u627e\u548c\u6700\u5c0f\u7684-k-\u5bf9\u6570\u5b57"},"14\u65e5 No.373 \u67e5\u627e\u548c\u6700\u5c0f\u7684 K \u5bf9\u6570\u5b57"),(0,a.kt)("p",null,"\u539f\u8d34\u5730\u5740\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://dawnmagnet.github.io/algorithm-station/docs/2022/1/14"},"https://dawnmagnet.github.io/algorithm-station/docs/2022/1/14")),(0,a.kt)("p",null,"\u7ed9\u5b9a\u4e24\u4e2a\u4ee5 \u5347\u5e8f\u6392\u5217 \u7684\u6574\u6570\u6570\u7ec4 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums1")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"nums2"),",\u4ee5\u53ca\u4e00\u4e2a\u6574\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"k"),"\u3002"),(0,a.kt)("p",null,"\u5b9a\u4e49\u4e00\u5bf9\u503c",(0,a.kt)("inlineCode",{parentName:"p"},"(u,v)"),"\uff0c\u5176\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u6765\u81ea",(0,a.kt)("inlineCode",{parentName:"p"},"nums1"),"\uff0c\u7b2c\u4e8c\u4e2a\u5143\u7d20\u6765\u81ea ",(0,a.kt)("inlineCode",{parentName:"p"},"nums2"),"\u3002"),(0,a.kt)("p",null,"\u8bf7\u627e\u5230\u548c\u6700\u5c0f\u7684 k\u4e2a\u6570\u5bf9(u1,v1), (u2,v2) ... (uk,vk)\u3002"),(0,a.kt)("p",null,"\u793a\u4f8b 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165: nums1 = [1,7,11], nums2 = [2,4,6], k = 3\n\u8f93\u51fa: [1,2],[1,4],[1,6]\n\u89e3\u91ca: \u8fd4\u56de\u5e8f\u5217\u4e2d\u7684\u524d 3 \u5bf9\u6570\uff1a\n    [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]\n")),(0,a.kt)("p",null,"\u793a\u4f8b 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165: nums1 = [1,1,2], nums2 = [1,2,3], k = 2\n\u8f93\u51fa: [1,1],[1,1]\n\u89e3\u91ca: \u8fd4\u56de\u5e8f\u5217\u4e2d\u7684\u524d 2 \u5bf9\u6570\uff1a\n    [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]\n")),(0,a.kt)("p",null,"\u793a\u4f8b 3:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"\u8f93\u5165: nums1 = [1,2], nums2 = [3], k = 3 \n\u8f93\u51fa: [1,3],[2,3]\n\u89e3\u91ca: \u4e5f\u53ef\u80fd\u5e8f\u5217\u4e2d\u6240\u6709\u7684\u6570\u5bf9\u90fd\u88ab\u8fd4\u56de:[1,3],[2,3]\n")),(0,a.kt)("p",null,"\u63d0\u793a:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= nums1.length, nums2.length <= 10E5")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"-10E9 <= nums1[i], nums2[i] <= 10E9")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"nums1 \u548c nums2 \u5747\u4e3a\u5347\u5e8f\u6392\u5217")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"1 <= k <= 1000"))),(0,a.kt)("p",null,"\u6765\u6e90\uff1a\u529b\u6263\uff08LeetCode\uff09\n\u94fe\u63a5\uff1a",(0,a.kt)("a",{parentName:"p",href:"https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums"},"https://leetcode-cn.com/problems/find-k-pairs-with-smallest-sums"),"\n\u8457\u4f5c\u6743\u5f52\u9886\u6263\u7f51\u7edc\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u5b98\u65b9\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002"),(0,a.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,a.kt)("p",null,"\u672c\u9898\u4e3b\u8981\u601d\u8def\u5c31\u662f\u4e00\u4e2a\u627e\u6700\u5c0fk\u4e2a\uff0c\u4e00\u822c\u627e\u6700\u5c0fk\u4e2a\u6216\u8005\u6700\u5927k\u4e2a\u90fd\u4f1a\u7528\u5230\u4e00\u4e2a\u7b97\u6cd5\u53eb\u505a\u5806\uff0c\u8fd9\u4e2a\u5806\u4e00\u822c\u4e5f\u6709\u5f88\u591a\u53eb\u6cd5\uff0c\u6709\u53eb\u6700\u5c0f\u5806\u3001\u6700\u5927\u5806\u7684\uff0c\u4e5f\u6709\u53eb\u4f18\u5148\u961f\u5217\u7684\uff0c\u4f46\u672c\u8d28\u90fd\u662f\u7ef4\u62a4\u4e00\u4e2a\u5806\u3002\u8fd9\u4e2a\u5806\u6709\u4e00\u4e9b\u6027\u8d28\uff0c\u6700\u5927\u5806\u7684\u6bcf\u4e2a\u7236\u8282\u70b9\u90fd\u6bd4\u5b50\u8282\u70b9\u5927\uff0c\u6700\u5c0f\u5806\u6bcf\u4e2a\u7236\u8282\u70b9\u90fd\u6bd4\u5b50\u8282\u70b9\u5c0f\u3002\u5728\u7ef4\u62a4\u8fd9\u4e2a\u6027\u8d28\u7684\u540c\u65f6\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u5165\u5806\u6216\u8005\u51fa\u5806\u64cd\u4f5c\uff0c\u5e76\u7528\u4e00\u4e2a\u975e\u5e38\u77ed\u7684\u65f6\u95f4$O(lg(n))$\u6765\u7ef4\u62a4\u8fd9\u4e2a\u5806\u7684\u6027\u8d28\u3002\u8fd9\u6837\u5c31\u80fd\u505a\u5230\u5feb\u901f\u83b7\u5f97\u51e0\u4e2a\u6700\u5927\u6216\u8005\u6700\u5c0f\u7684\u5143\u7d20\u3002"),(0,a.kt)("p",null,"\u5728\u8fd9\u91cc\uff0c\u56e0\u4e3a\u6211\u4eec\u603b\u4f53\u8981\u6765\u67e5\u8be2\u7684\u4e00\u5171\u6709$m*n$\u4e2a\u5143\u7d20\uff0c\u4e5f\u5c31\u662f\u4e24\u4e2a\u6570\u7ec4\u4e24\u4e24\u76f8\u52a0\u7684\u6570\u5b57\u90fd\u6709\u53ef\u80fd\u662f\u7ed3\u679c\u7684\u4e00\u90e8\u5206\u3002"),(0,a.kt)("p",null,"\u6240\u4ee5\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u6700\u5927\u5806\uff0c\u5728\u8fd9\u91cc\u6211\u4eec\u5c31\u53eb\u5b83",(0,a.kt)("inlineCode",{parentName:"p"},"heap"),"\uff0c\u8fd9\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"heap"),"\u5b58\u5728\u7684\u5143\u7d20\u4e2a\u6570\u59cb\u7ec8\u4e0d\u4f1a\u8d85\u8fc7",(0,a.kt)("inlineCode",{parentName:"p"},"k"),"\u4e2a\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"k"),"\u4e5f\u5c31\u662f\u6700\u7ec8\u7b54\u6848\u91cc\u6240\u8981\u6c42\u7684\u7b54\u6848\u4e2a\u6570\uff0c\u9996\u5148\u6211\u4eec\u6765\u4e24\u5c42\u5faa\u73af\uff0c\u4e5f\u5c31\u662f\u4e24\u4e24\u76f8\u52a0\uff0c\u5f80\u8fd9\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"heap"),"\u91cc\u653e\u7f6e\u5143\u7d20\u3002\u56e0\u4e3a\u6211\u4eec\u6700\u7ec8\u8981\u4fdd\u7559",(0,a.kt)("inlineCode",{parentName:"p"},"k"),"\u4e2a\uff0c\u6240\u4ee5\u4e00\u65e6",(0,a.kt)("inlineCode",{parentName:"p"},"heap"),"\u91cc\u5143\u7d20\u7684\u4e2a\u6570\u5927\u4e8e",(0,a.kt)("inlineCode",{parentName:"p"},"k"),"\u4e2a\uff0c\u5c31\u5c06\u5176",(0,a.kt)("inlineCode",{parentName:"p"},"pop"),"\u6389\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u4fdd\u8bc1\u4e00\u5b9a\u53ef\u4ee5\u53d6\u5f97\u5230\u6700\u5c0f\u7684",(0,a.kt)("inlineCode",{parentName:"p"},"k"),"\u4e2a\u5143\u7d20\u3002"),(0,a.kt)("p",null,"\u4ee5\u4e0a\u5c31\u662f\u4e3b\u8981\u7684\u601d\u8def\uff0c\u63a5\u4e0b\u6765\u8bb2\u4e00\u4e9b\u53ef\u4ee5\u4f18\u5316\u7684\u70b9\uff08\u4e0d\u4f18\u5316\u53ef\u80fd\u4f1a\u8d85\u65f6\uff09\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u56e0\u4e3a\u6211\u4eec\u6765\u770b\u5230\u9898\u76ee\u7684\u6570\u636e\u8303\u56f4\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"nums1"),"\u548c",(0,a.kt)("inlineCode",{parentName:"li"},"nums2"),"\u4e2d\u90fd\u6709\u53ef\u80fd\u5b58\u5728\u81f3\u591a$10^5$\u4e2a\u5143\u7d20\uff0c\u800c\u6211\u4eec\u6700\u7ec8\u7684\u7b54\u6848\u6700\u591a\u6700\u591a\u4e5f\u5c31",(0,a.kt)("inlineCode",{parentName:"li"},"1000"),"\u4e2a\uff0c\u90fd\u5224\u65ad\u80af\u5b9a\u6ca1\u6709\u5fc5\u8981\uff0c\u6240\u4ee5\u9996\u5148\u53ef\u4ee5\u9650\u5236\u5faa\u73af\u7684\u53d8\u91cf\u53d8\u5316\u7684\u8303\u56f4\uff0c\u539f\u6765\u662f\u4e0d\u8bbe\u9650\u5236\uff0c\u73b0\u5728\u53ef\u4ee5\u6539\u6210\u6700\u5927\u5230",(0,a.kt)("inlineCode",{parentName:"li"},"k"),"\uff08\u56e0\u4e3a\u6700\u7ec8\u7684\u7b54\u6848\u4e00\u5b9a\u662f\u5728",(0,a.kt)("inlineCode",{parentName:"li"},"nums1"),"\u4e2d\u524d",(0,a.kt)("inlineCode",{parentName:"li"},"k"),"\u4e2a\u6570\u5b57\u548c",(0,a.kt)("inlineCode",{parentName:"li"},"nums2"),"\u4e2d\u524d",(0,a.kt)("inlineCode",{parentName:"li"},"k"),"\u4e2a\u6570\u5b57\u4e24\u4e24\u914d\u5bf9\u7684\u7ed3\u679c\u4e2d\u7684\uff0c\u7a0d\u5fae\u4ed4\u7ec6\u60f3\u4e00\u60f3\u5c31\u80fd\u660e\u767d\u5427\uff09"),(0,a.kt)("li",{parentName:"ul"},"\u7b2c\u4e8c\u4e2a\u4f18\u5316\u7684\u5730\u65b9\u5c31\u662f\u5728\u5faa\u73af\u8fc7\u7a0b\u4e2d\uff0c\u56e0\u4e3a\u6211\u4eec\u662f\u6309\u987a\u5e8f\u4ece\u524d\u5411\u540e\u904d\u5386\u7684\uff0c\u5982\u679c\u5f53\u524d\u904d\u5386\u5230\u7684\u6570\u5b57\u5927\u4e8e\u7b49\u4e8e\u5806\u4e2d\u7684\u6700\u5927\u5143\u7d20\u65f6\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5f53\u524d\u7684\u67d0\u4e9b\u5faa\u73af\u5df2\u7ecf\u6ca1\u6709\u904d\u5386\u7684\u5fc5\u8981\u4e86\uff0c\u5c31\u53ef\u4ee5\u8fdb\u884c",(0,a.kt)("inlineCode",{parentName:"li"},"break"),"\u8df3\u8fc7\u3002")),(0,a.kt)("h1",{id:"rust\u4ee3\u7801"},"Rust\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-rust"},"use std::collections::BinaryHeap;\nimpl Solution {\n    pub fn k_smallest_pairs(nums1: Vec<i32>, nums2: Vec<i32>, k: i32) -> Vec<Vec<i32>> {\n        let mut res = vec![];\n        let mut heap = BinaryHeap::new();\n        for i in 0..(nums1.len()).min(k as usize) {\n            for j in 0..(nums2.len()).min(k as usize) {\n                heap.push((nums1[i] + nums2[j], nums1[i], nums2[j]));\n                if heap.len() > k as usize {\n                    if let Some((a, b, c)) = heap.pop() {\n                        if b == nums1[i] && c == nums2[j] {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n        \n        while heap.len() > 0 {\n            if let Some((a, b, c)) = heap.pop() {\n                res.push(vec![b, c]);\n            }\n        }\n        res\n    }\n}\n")))}c.isMDXComponent=!0}}]);