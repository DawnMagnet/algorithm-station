"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[2193],{3905:function(e,t,n){n.d(t,{Zo:function(){return i},kt:function(){return d}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),c=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):u(u({},t),e)),n},i=function(e){var t=c(e.components);return r.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,a=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),f=c(n),d=o,m=f["".concat(a,".").concat(d)]||f[d]||p[d]||l;return n?r.createElement(m,u(u({ref:t},i),{},{components:n})):r.createElement(m,u({ref:t},i))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,u=new Array(l);u[0]=f;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:o,u[1]=s;for(var c=2;c<l;c++)u[c]=n[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},2609:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return a},default:function(){return f},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return i}});var r=n(7462),o=n(3366),l=(n(7294),n(3905)),u=["components"],s={},a="No.475 \u4f9b\u6696\u5668",c={unversionedId:"leetcode/2021/12/20",id:"leetcode/2021/12/20",title:"No.475 \u4f9b\u6696\u5668",description:"\u51ac\u5b63\u5df2\u7ecf\u6765\u4e34\u3002&nbsp;\u4f60\u7684\u4efb\u52a1\u662f\u8bbe\u8ba1\u4e00\u4e2a\u6709\u56fa\u5b9a\u52a0\u70ed\u534a\u5f84\u7684\u4f9b\u6696\u5668\u5411\u6240\u6709\u623f\u5c4b\u4f9b\u6696\u3002",source:"@site/docs/leetcode/2021/12/20.md",sourceDirName:"leetcode/2021/12",slug:"/leetcode/2021/12/20",permalink:"/algorithm-station/docs/leetcode/2021/12/20",editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/leetcode/2021/12/20.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.434 \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570",permalink:"/algorithm-station/docs/leetcode/2021/10/7"},next:{title:"21\u65e5 No.1154 \u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929",permalink:"/algorithm-station/docs/leetcode/2021/12/21"}},i=[],p={toc:i};function f(e){var t=e.components,n=(0,o.Z)(e,u);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"no475-\u4f9b\u6696\u5668"},"No.475 \u4f9b\u6696\u5668"),(0,l.kt)("div",{class:"css-1a7yjpy-ZoomWrapper e13l6k8o9"},(0,l.kt)("div",{class:"content__1Y2H"},(0,l.kt)("div",{class:"notranslate"},(0,l.kt)("p",null,"\u51ac\u5b63\u5df2\u7ecf\u6765\u4e34\u3002\xa0\u4f60\u7684\u4efb\u52a1\u662f\u8bbe\u8ba1\u4e00\u4e2a\u6709\u56fa\u5b9a\u52a0\u70ed\u534a\u5f84\u7684\u4f9b\u6696\u5668\u5411\u6240\u6709\u623f\u5c4b\u4f9b\u6696\u3002"),(0,l.kt)("p",null,"\u5728\u52a0\u70ed\u5668\u7684\u52a0\u70ed\u534a\u5f84\u8303\u56f4\u5185\u7684\u6bcf\u4e2a\u623f\u5c4b\u90fd\u53ef\u4ee5\u83b7\u5f97\u4f9b\u6696\u3002"),(0,l.kt)("p",null,"\u73b0\u5728\uff0c\u7ed9\u51fa\u4f4d\u4e8e\u4e00\u6761\u6c34\u5e73\u7ebf\u4e0a\u7684\u623f\u5c4b\xa0",(0,l.kt)("code",null,"houses"),"\u548c\u4f9b\u6696\u5668\xa0",(0,l.kt)("code",null,"heaters"),"\u7684\u4f4d\u7f6e\uff0c\u8bf7\u4f60\u627e\u51fa\u5e76\u8fd4\u56de\u53ef\u4ee5\u8986\u76d6\u6240\u6709\u623f\u5c4b\u7684\u6700\u5c0f\u52a0\u70ed\u534a\u5f84\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u8bf4\u660e"),"\uff1a\u6240\u6709\u4f9b\u6696\u5668\u90fd\u9075\u5faa\u4f60\u7684\u534a\u5f84\u6807\u51c6\uff0c\u52a0\u70ed\u7684\u534a\u5f84\u4e5f\u4e00\u6837\u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 1:")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165:")," houses = [1,2,3], heaters = [2]",(0,l.kt)("strong",null,"\u8f93\u51fa:")," 1",(0,l.kt)("strong",null,"\u89e3\u91ca:")," \u4ec5\u5728\u4f4d\u7f6e2\u4e0a\u6709\u4e00\u4e2a\u4f9b\u6696\u5668\u3002\u5982\u679c\u6211\u4eec\u5c06\u52a0\u70ed\u534a\u5f84\u8bbe\u4e3a1\uff0c\u90a3\u4e48\u6240\u6709\u623f\u5c4b\u5c31\u90fd\u80fd\u5f97\u5230\u4f9b\u6696\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 2:")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165:")," houses = [1,2,3,4], heaters = [1,4]",(0,l.kt)("strong",null,"\u8f93\u51fa:")," 1",(0,l.kt)("strong",null,"\u89e3\u91ca:")," \u5728\u4f4d\u7f6e1, 4\u4e0a\u6709\u4e24\u4e2a\u4f9b\u6696\u5668\u3002\u6211\u4eec\u9700\u8981\u5c06\u52a0\u70ed\u534a\u5f84\u8bbe\u4e3a1\uff0c\u8fd9\u6837\u6240\u6709\u623f\u5c4b\u5c31\u90fd\u80fd\u5f97\u5230\u4f9b\u6696\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 3\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"houses = [1,5], heaters = [2]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"3"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= houses.length, heaters.length <= 3 * 10",(0,l.kt)("sup",null,"4"))),(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= houses[i], heaters[i] <= 10",(0,l.kt)("sup",null,"9"))))))),(0,l.kt)("h1",{id:"\u9898\u89e3"},"\u9898\u89e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"impl Solution {\n    pub fn find_radius(mut houses: Vec<i32>, mut heaters: Vec<i32>) -> i32 {\n        houses.sort_unstable();\n        heaters.sort_unstable();\n        let mut res = 0;\n        let mut cur = 0;\n        for house in houses {\n            while cur < heaters.len() - 1 && \n                (heaters[cur + 1] - house).abs() <= (heaters[cur] - house).abs() {\n                cur += 1;\n            }\n            res = res.max((heaters[cur] - house).abs())\n        }\n        res\n    }\n}\n")))}f.isMDXComponent=!0}}]);