"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[5401],{3905:(t,e,n)=>{n.d(e,{Zo:()=>s,kt:()=>m});var r=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function u(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,l=function(t,e){if(null==t)return{};var n,r,l={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var a=r.createContext({}),c=function(t){var e=r.useContext(a),n=e;return t&&(n="function"==typeof t?t(e):u(u({},e),t)),n},s=function(t){var e=c(t.components);return r.createElement(a.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},k=r.forwardRef((function(t,e){var n=t.components,l=t.mdxType,o=t.originalType,a=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),p=c(n),k=l,m=p["".concat(a,".").concat(k)]||p[k]||d[k]||o;return n?r.createElement(m,u(u({ref:e},s),{},{components:n})):r.createElement(m,u({ref:e},s))}));function m(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var o=n.length,u=new Array(o);u[0]=k;var i={};for(var a in e)hasOwnProperty.call(e,a)&&(i[a]=e[a]);i.originalType=t,i[p]="string"==typeof t?t:l,u[1]=i;for(var c=2;c<o;c++)u[c]=n[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},9852:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>u,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(7462),l=(n(7294),n(3905));const o={},u="No.414 \u7b2c\u4e09\u5927\u7684\u6570",i={unversionedId:"leetcode/2021/10/6",id:"leetcode/2021/10/6",title:"No.414 \u7b2c\u4e09\u5927\u7684\u6570",description:"\u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6570\u7ec4\uff0c\u8fd4\u56de\u6b64\u6570\u7ec4\u4e2d \u7b2c\u4e09\u5927\u7684\u6570 \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u6570\u3002",source:"@site/docs/leetcode/2021/10/6.md",sourceDirName:"leetcode/2021/10",slug:"/leetcode/2021/10/6",permalink:"/docs/leetcode/2021/10/6",draft:!1,editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/leetcode/2021/10/6.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.284 \u7aa5\u63a2\u8fed\u4ee3\u5668",permalink:"/docs/leetcode/2021/10/5"},next:{title:"No.434 \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570",permalink:"/docs/leetcode/2021/10/7"}},a={},c=[],s={toc:c},p="wrapper";function d(t){let{components:e,...n}=t;return(0,l.kt)(p,(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"no414-\u7b2c\u4e09\u5927\u7684\u6570"},"No.414 \u7b2c\u4e09\u5927\u7684\u6570"),(0,l.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6570\u7ec4\uff0c\u8fd4\u56de\u6b64\u6570\u7ec4\u4e2d ",(0,l.kt)("strong",null,"\u7b2c\u4e09\u5927\u7684\u6570")," \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u6570\u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"[3, 2, 1]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"1",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u7b2c\u4e09\u5927\u7684\u6570\u662f 1 \u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"[1, 2]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"2",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u7b2c\u4e09\u5927\u7684\u6570\u4e0d\u5b58\u5728, \u6240\u4ee5\u8fd4\u56de\u6700\u5927\u7684\u6570 2 \u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 3\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"[2, 2, 3, 1]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"1",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u6ce8\u610f\uff0c\u8981\u6c42\u8fd4\u56de\u7b2c\u4e09\u5927\u7684\u6570\uff0c\u662f\u6307\u5728\u6240\u6709\u4e0d\u540c\u6570\u5b57\u4e2d\u6392\u7b2c\u4e09\u5927\u7684\u6570\u3002 \u6b64\u4f8b\u4e2d\u5b58\u5728\u4e24\u4e2a\u503c\u4e3a 2 \u7684\u6570\uff0c\u5b83\u4eec\u90fd\u6392\u7b2c\u4e8c\u3002\u5728\u6240\u6709\u4e0d\u540c\u6570\u5b57\u4e2d\u6392\u7b2c\u4e09\u5927\u7684\u6570\u4e3a 1 \u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= nums.length <= 10",(0,l.kt)("sup",null,"4"))),(0,l.kt)("li",null,(0,l.kt)("code",null,"-2",(0,l.kt)("sup",null,"31")," <= nums[i] <= 2",(0,l.kt)("sup",null,"31")," - 1"))),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u8fdb\u9636\uff1a"),"\u4f60\u80fd\u8bbe\u8ba1\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6 ",(0,l.kt)("code",null,"O(n)")," \u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f"),(0,l.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,l.kt)("p",null,"\u8fd9\u79cd\u9898\u4e00\u822c\u5c31\u5957\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u5c31\u884c\u3002"),(0,l.kt)("p",null,"O(n)\u7684\u8bdd\u5c31\u7ef4\u62a4\u4e00\u4e0b\u6709\u5e8f\u6570\u7ec4\uff0c\u4f7f\u5f97\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u4e0d\u4f1a\u5927\u4e8e\u4e09\u4e2a\u3002\u56e0\u4e3a\u5927\u4e8e\u4e09\u4e2a\u4e5f\u7528\u4e0d\u5230\u3002"),(0,l.kt)("h1",{id:"rust\u4ee3\u7801"},"Rust\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"# struct Solution;\nuse std::collections::BTreeSet;\nimpl Solution {\n    pub fn third_max(mut nums: Vec<i32>) -> i32 {\n        let mut set = BTreeSet::new();\n        for item in nums {\n            set.insert(item);\n        }\n        *set.iter().rev().nth(2).unwrap_or(set.iter().last().unwrap())\n    }\n}\n")))}d.isMDXComponent=!0}}]);