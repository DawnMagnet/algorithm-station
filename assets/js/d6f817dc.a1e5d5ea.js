"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[5713],{3905:function(n,e,t){t.d(e,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function o(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function u(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?u(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function l(n,e){if(null==n)return{};var t,r,o=function(n,e){if(null==n)return{};var t,r,o={},u=Object.keys(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||(o[t]=n[t]);return o}(n,e);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(n);for(r=0;r<u.length;r++)t=u[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(o[t]=n[t])}return o}var c=r.createContext({}),a=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},s=function(n){var e=a(n.components);return r.createElement(c.Provider,{value:e},n.children)},p={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(n,e){var t=n.components,o=n.mdxType,u=n.originalType,c=n.parentName,s=l(n,["components","mdxType","originalType","parentName"]),f=a(t),m=o,d=f["".concat(c,".").concat(m)]||f[m]||p[m]||u;return t?r.createElement(d,i(i({ref:e},s),{},{components:t})):r.createElement(d,i({ref:e},s))}));function m(n,e){var t=arguments,o=e&&e.mdxType;if("string"==typeof n||o){var u=t.length,i=new Array(u);i[0]=f;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=n,l.mdxType="string"==typeof n?n:o,i[1]=l;for(var a=2;a<u;a++)i[a]=t[a];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},1776:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return a},toc:function(){return s},default:function(){return f}});var r=t(7462),o=t(3366),u=(t(7294),t(3905)),i=["components"],l={},c="No.405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570",a={unversionedId:"2021/10/No.405",id:"2021/10/No.405",title:"No.405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570",description:"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u5c06\u8fd9\u4e2a\u6570\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u3002\u5bf9\u4e8e\u8d1f\u6574\u6570\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528&nbsp;\u8865\u7801\u8fd0\u7b97&nbsp;\u65b9\u6cd5\u3002",source:"@site/docs/2021/10/2-No.405.md",sourceDirName:"2021/10",slug:"/2021/10/No.405",permalink:"/docs/2021/10/No.405",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/2021/10/2-No.405.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.1436 \u65c5\u884c\u7ec8\u70b9\u7ad9",permalink:"/docs/2021/10/No.1436"},next:{title:"No.166 \u5206\u6570\u5230\u5c0f\u6570",permalink:"/docs/2021/10/No.166"}},s=[],p={toc:s};function f(n){var e=n.components,t=(0,o.Z)(n,i);return(0,u.kt)("wrapper",(0,r.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,u.kt)("h1",{id:"no405-\u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570"},"No.405 \u6570\u5b57\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570"),(0,u.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\u5c06\u8fd9\u4e2a\u6570\u8f6c\u6362\u4e3a\u5341\u516d\u8fdb\u5236\u6570\u3002\u5bf9\u4e8e\u8d1f\u6574\u6570\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528\xa0",(0,u.kt)("a",{href:"https://baike.baidu.com/item/%E8%A1%A5%E7%A0%81/6854613?fr=aladdin"},"\u8865\u7801\u8fd0\u7b97"),"\xa0\u65b9\u6cd5\u3002"),(0,u.kt)("p",null,(0,u.kt)("strong",null,"\u6ce8\u610f:")),(0,u.kt)("ol",null,(0,u.kt)("li",null,"\u5341\u516d\u8fdb\u5236\u4e2d\u6240\u6709\u5b57\u6bcd(",(0,u.kt)("code",null,"a-f"),")\u90fd\u5fc5\u987b\u662f\u5c0f\u5199\u3002"),(0,u.kt)("li",null,"\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u4e2d\u4e0d\u80fd\u5305\u542b\u591a\u4f59\u7684\u524d\u5bfc\u96f6\u3002\u5982\u679c\u8981\u8f6c\u5316\u7684\u6570\u4e3a0\uff0c\u90a3\u4e48\u4ee5\u5355\u4e2a\u5b57\u7b26",(0,u.kt)("code",null,"'0'"),"\u6765\u8868\u793a\uff1b\u5bf9\u4e8e\u5176\u4ed6\u60c5\u51b5\uff0c\u5341\u516d\u8fdb\u5236\u5b57\u7b26\u4e32\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5c06\u4e0d\u4f1a\u662f0\u5b57\u7b26\u3002\xa0"),(0,u.kt)("li",null,"\u7ed9\u5b9a\u7684\u6570\u786e\u4fdd\u572832\u4f4d\u6709\u7b26\u53f7\u6574\u6570\u8303\u56f4\u5185\u3002"),(0,u.kt)("li",null,(0,u.kt)("strong",null,"\u4e0d\u80fd\u4f7f\u7528\u4efb\u4f55\u7531\u5e93\u63d0\u4f9b\u7684\u5c06\u6570\u5b57\u76f4\u63a5\u8f6c\u6362\u6216\u683c\u5f0f\u5316\u4e3a\u5341\u516d\u8fdb\u5236\u7684\u65b9\u6cd5\u3002"))),(0,u.kt)("p",null,(0,u.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,u.kt)("pre",null,'\u8f93\u5165: 26 \u8f93\u51fa: "1a"'),(0,u.kt)("p",null,(0,u.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,u.kt)("pre",null,'\u8f93\u5165: -1 \u8f93\u51fa: "ffffffff"'),(0,u.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,u.kt)("p",null,"\u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236\u7684\u64cd\u4f5c\u3002\u6700\u597d\u4f7f\u7528\u4e8c\u8fdb\u5236\u8fd0\u7b97\u6765\u505a\uff0c\u80fd\u591f\u66f4\u9ad8\u6548\u5730\u5229\u7528\u8ba1\u7b97\u673a\u4e8c\u8fdb\u5236\u7684\u67b6\u6784\u3002"),(0,u.kt)("p",null,"\u4e00\u4f4d\u5341\u516d\u8fdb\u5236\u5bf9\u5e94\u5230\u56db\u4f4d\u4e8c\u8fdb\u5236\u3002"),(0,u.kt)("h1",{id:"rust\u4ee3\u7801"},"Rust\u4ee3\u7801"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-rust"},'# struct Solution;\nimpl Solution {\n    pub fn to_hex(num: i32) -> String {\n        let turned: Vec<char> = "0123456789abcdef".chars().collect();\n        let mut num = num as u32;\n        if num == 0 {\n            return "0".to_string();\n        }\n        let mut res = vec![];\n        while num != 0 {\n            let mut tmp = 0;\n            for i in 0..4 {\n                tmp += (num & 1) * (1 << i);\n                num >>= 1;\n            }\n            res.push(turned[tmp as usize]);\n        }\n        res.reverse();\n        res.iter().collect()\n    }\n}\n')),(0,u.kt)("h1",{id:"c\u4ee3\u7801"},"C++\u4ee3\u7801"),(0,u.kt)("pre",null,(0,u.kt)("code",{parentName:"pre",className:"language-cpp"},'static const char * turned = "0123456789abcdef";\nclass Solution {\npublic:\n    string toHex(unsigned int num) {\n        string res;\n        do {\n            int tmp = 0;\n            for (int i = 0; i < 4; ++i) {\n                tmp += (num & 1) * (1 << i);\n                num >>= 1;\n            }\n            res.push_back(turned[tmp]);\n        } while (num != 0);\n        reverse(res.begin(), res.end());\n        return res;\n    }\n};\n')))}f.isMDXComponent=!0}}]);