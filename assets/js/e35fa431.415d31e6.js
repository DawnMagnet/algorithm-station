"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[8960],{3905:function(n,t,e){e.d(t,{Zo:function(){return s},kt:function(){return k}});var r=e(7294);function l(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){l(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function u(n,t){if(null==n)return{};var e,r,l=function(n,t){if(null==n)return{};var e,r,l={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(l[e]=n[e]);return l}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(l[e]=n[e])}return l}var a=r.createContext({}),p=function(n){var t=r.useContext(a),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},s=function(n){var t=p(n.components);return r.createElement(a.Provider,{value:t},n.children)},c={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(n,t){var e=n.components,l=n.mdxType,i=n.originalType,a=n.parentName,s=u(n,["components","mdxType","originalType","parentName"]),m=p(e),k=l,d=m["".concat(a,".").concat(k)]||m[k]||c[k]||i;return e?r.createElement(d,o(o({ref:t},s),{},{components:e})):r.createElement(d,o({ref:t},s))}));function k(n,t){var e=arguments,l=t&&t.mdxType;if("string"==typeof n||l){var i=e.length,o=new Array(i);o[0]=m;var u={};for(var a in t)hasOwnProperty.call(t,a)&&(u[a]=t[a]);u.originalType=n,u.mdxType="string"==typeof n?n:l,o[1]=u;for(var p=2;p<i;p++)o[p]=e[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}m.displayName="MDXCreateElement"},5989:function(n,t,e){e.r(t),e.d(t,{frontMatter:function(){return u},contentTitle:function(){return a},metadata:function(){return p},toc:function(){return s},default:function(){return m}});var r=e(7462),l=e(3366),i=(e(7294),e(3905)),o=["components"],u={},a="No.446 \u7b49\u5dee\u6570\u5217\u5212\u5206 II - \u5b50\u5e8f\u5217",p={unversionedId:"2021/8/No.446",id:"2021/8/No.446",title:"No.446 \u7b49\u5dee\u6570\u5217\u5212\u5206 II - \u5b50\u5e8f\u5217",description:"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u8fd4\u56de nums \u4e2d\u6240\u6709 \u7b49\u5dee\u5b50\u5e8f\u5217 \u7684\u6570\u76ee\u3002",source:"@site/docs/2021/8/11-No.446.md",sourceDirName:"2021/8",slug:"/2021/8/No.446",permalink:"/algorithm-station/docs/2021/8/No.446",editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/2021/8/11-No.446.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.413 \u7b49\u5dee\u6570\u5217\u5212\u5206",permalink:"/algorithm-station/docs/2021/8/No.413"},next:{title:"No.516 \u6700\u957f\u56de\u6587\u5b50\u5e8f\u5217",permalink:"/algorithm-station/docs/2021/8/No.516"}},s=[],c={toc:s};function m(n){var t=n.components,e=(0,l.Z)(n,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"no446-\u7b49\u5dee\u6570\u5217\u5212\u5206-ii---\u5b50\u5e8f\u5217"},"No.446 \u7b49\u5dee\u6570\u5217\u5212\u5206 II - \u5b50\u5e8f\u5217"),(0,i.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 ",(0,i.kt)("code",null,"nums")," \uff0c\u8fd4\u56de ",(0,i.kt)("code",null,"nums")," \u4e2d\u6240\u6709 ",(0,i.kt)("strong",null,"\u7b49\u5dee\u5b50\u5e8f\u5217")," \u7684\u6570\u76ee\u3002"),(0,i.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u5e8f\u5217\u4e2d ",(0,i.kt)("strong",null,"\u81f3\u5c11\u6709\u4e09\u4e2a\u5143\u7d20")," \uff0c\u5e76\u4e14\u4efb\u610f\u4e24\u4e2a\u76f8\u90bb\u5143\u7d20\u4e4b\u5dee\u76f8\u540c\uff0c\u5219\u79f0\u8be5\u5e8f\u5217\u4e3a\u7b49\u5dee\u5e8f\u5217\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",null,"\u4f8b\u5982\uff0c",(0,i.kt)("code",null,"[1, 3, 5, 7, 9]"),"\u3001",(0,i.kt)("code",null,"[7, 7, 7, 7]")," \u548c ",(0,i.kt)("code",null,"[3, -1, -5, -9]")," \u90fd\u662f\u7b49\u5dee\u5e8f\u5217\u3002"),(0,i.kt)("li",null,"\u518d\u4f8b\u5982\uff0c",(0,i.kt)("code",null,"[1, 1, 2, 5, 7]")," \u4e0d\u662f\u7b49\u5dee\u5e8f\u5217\u3002")),(0,i.kt)("p",null,"\u6570\u7ec4\u4e2d\u7684\u5b50\u5e8f\u5217\u662f\u4ece\u6570\u7ec4\u4e2d\u5220\u9664\u4e00\u4e9b\u5143\u7d20\uff08\u4e5f\u53ef\u80fd\u4e0d\u5220\u9664\uff09\u5f97\u5230\u7684\u4e00\u4e2a\u5e8f\u5217\u3002"),(0,i.kt)("ul",null,(0,i.kt)("li",null,"\u4f8b\u5982\uff0c",(0,i.kt)("code",null,"[2,5,10]")," \u662f ",(0,i.kt)("code",null,"[1,2,1,",(0,i.kt)("em",null,(0,i.kt)("strong",null,"2")),",4,1,",(0,i.kt)("strong",null,(0,i.kt)("em",null,"5")),",",(0,i.kt)("em",null,(0,i.kt)("strong",null,"10")),"]")," \u7684\u4e00\u4e2a\u5b50\u5e8f\u5217\u3002")),(0,i.kt)("p",null,"\u9898\u76ee\u6570\u636e\u4fdd\u8bc1\u7b54\u6848\u662f\u4e00\u4e2a ",(0,i.kt)("strong",null,"32-bit")," \u6574\u6570\u3002"),(0,i.kt)("p",null,"\xa0"),(0,i.kt)("p",null,(0,i.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,i.kt)("pre",null,(0,i.kt)("strong",null,"\u8f93\u5165\uff1a"),"nums = [2,4,6,8,10]",(0,i.kt)("strong",null,"\u8f93\u51fa\uff1a"),"7",(0,i.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u6240\u6709\u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u4e3a\uff1a [2,4,6] [4,6,8] [6,8,10] [2,4,6,8] [4,6,8,10] [2,4,6,8,10] [2,6,10]"),(0,i.kt)("p",null,(0,i.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,i.kt)("pre",null,(0,i.kt)("strong",null,"\u8f93\u5165\uff1a"),"nums = [7,7,7,7,7]",(0,i.kt)("strong",null,"\u8f93\u51fa\uff1a"),"16",(0,i.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u6570\u7ec4\u4e2d\u7684\u4efb\u610f\u5b50\u5e8f\u5217\u90fd\u662f\u7b49\u5dee\u5b50\u5e8f\u5217\u3002"),(0,i.kt)("p",null,"\xa0"),(0,i.kt)("p",null,(0,i.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,i.kt)("ul",null,(0,i.kt)("li",null,(0,i.kt)("code",null,"1\xa0 <= nums.length <= 1000")),(0,i.kt)("li",null,(0,i.kt)("code",null,"-2",(0,i.kt)("sup",null,"31")," <= nums[i] <= 2",(0,i.kt)("sup",null,"31")," - 1"))),(0,i.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,i.kt)("p",null,"\u672c\u9898\u4e0e",(0,i.kt)("a",{parentName:"p",href:"/algorithm-station/docs/2021/8/No.413"},"\u6628\u5929\u7684\u9898\u76ee"),"\u51e0\u4e4e\u5b8c\u5168\u4e00\u81f4\u3002\u552f\u4e00\u6709\u533a\u522b\u7684\u5730\u65b9\u5c31\u662f\u5c06",(0,i.kt)("strong",{parentName:"p"},"\u5b50\u6570\u7ec4\u6539\u6210\u4e86\u5b50\u5e8f\u5217"),"\u3002",(0,i.kt)("br",{parentName:"p"}),"\n","\u4f46\u8fd9\u4e2a\u6539\u52a8\u53ef\u4e0d\u662f\u5c0f\u5c0f\u7684\u6539\u52a8\uff0c\u6211\u4eec\u4e4b\u524d\u7684\u601d\u8003\u5728\u8fd9\u91cc\u51e0\u4e4e\u4e0d\u4f1a\u6709\u4ec0\u4e48\u7528\u5904\u3002  "),(0,i.kt)("p",null,"\u5b50\u5e8f\u5217\u662f\u6ca1\u6709\u8fde\u7eed\u6027\u7684\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e9b\u6709\u5148\u540e\u987a\u5e8f\u4f46\u662f\u6ca1\u6709\u90bb\u63a5\u987a\u5e8f\u7684\u6570\u5b57\uff0c\u53ea\u8981\u4ed6\u4eec\u6ee1\u8db3\u5dee\u503c\u662f\u4e00\u4e2a\u6052\u5b9a\u7684\u6570\uff0c\u4ed6\u4eec\u5c31\u662f\u5408\u6cd5\u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u3002"),(0,i.kt)("p",null,"\u9996\u5148\u8981\u7406\u89e3\u9898\u76ee\uff0c\u624d\u6709\u53ef\u80fd\u505a\u51fa\u6765\u3002"),(0,i.kt)("p",null,"\u90a3\u4e48\u5bf9\u4e8e\u5b50\u5e8f\u5217\uff0c\u6211\u4eec\u80fd\u60f3\u5230\u7684\u9664\u4e86\u66b4\u529b\u8fd8\u6709\u522b\u7684\u529e\u6cd5\u5417\uff1f",(0,i.kt)("br",{parentName:"p"}),"\n","\u5176\u5b9e\u7b54\u6848\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u53bb\u63d0\u70bc\u4e00\u4e0b\u89c4\u5f8b\uff0c\u4e00\u4e2a\u53ef\u4ee5\u603b\u7ed3\u7684\u89c4\u5f8b\u3002",(0,i.kt)("br",{parentName:"p"}),"\n","\u6bd4\u5982\u5728\u8fd9\u4e00\u9898\u4e2d\uff0c\u5982\u679c\u6211\u4eec\u77e5\u9053",(0,i.kt)("inlineCode",{parentName:"p"},"[.....,2,4,6]"),"\u662f\u4e00\u4e2a\u7b49\u5dee\u6570\u5217\uff0c\u90a3\u4e484\u524d\u9762\u7684\u4e1c\u897f\u6709\u591a\u5c11\u4f4d\u4e0e\u6211\u4eec\u5e76\u65e0\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u540e\u9762\u7684\u6570\u5b57\u6765\u8bf4\uff0c\u6211\u4eec\u5e76\u4e0d\u5173\u5fc32\u524d\u9762\u6709\u51e0\u4f4d\uff0c\u56e0\u4e3a\u90fd\u662f\u5dee\u4e3a2\u7684\u7b49\u5dee\u6570\u5217\u3002"),(0,i.kt)("p",null,"\u90a3\u4e48\u6574\u4e2a\u6570\u636e\u7ed3\u6784\u7684\u96cf\u5f62\u5c31\u51fa\u6765\u4e86\uff0c\u9996\u5148\u5916\u5c42\u662f\u4e00\u4e2a\u4ece\u524d\u5411\u540e\u7684\u904d\u5386\uff0c\u6bcf\u4e00\u6b65\u90fd\u4f1a\u5bf9\u81ea\u5df1\u53ca\u4e4b\u524d\u7684\u4e1c\u897f\u505a\u4e00\u4e2a\u8bb0\u5f55\uff0c\u65b9\u4fbf\u540e\u7eed\u4f7f\u7528\u3002",(0,i.kt)("br",{parentName:"p"}),"\n","\u8bb0\u5f55\u7684\u8fd9\u4e2a\u4e1c\u897f\uff0c\u80af\u5b9a\u662f\u57fa\u4e8e",(0,i.kt)("strong",{parentName:"p"},"\u7b49\u5dee\u6570\u5217\u7684\u5dee"),"\u6765\u8bb0\u5f55\u7684\uff0c\u6211\u4eec\u5c31\u4f7f\u7528\u4e00\u4e2a",(0,i.kt)("inlineCode",{parentName:"p"},"HashMap<i32,?>"),"\u6765\u8bb0\u5f55\uff0c\u90a3\u4e48\u8bb0\u5f55\u7684\u5185\u5bb9\u662f\u4ec0\u4e48\u5462\uff1f",(0,i.kt)("br",{parentName:"p"}),"\n","\u4e3a\u4e86\u540e\u7eed\u4f7f\u7528\uff0c\u6211\u4eec\u80af\u5b9a\u8981\u60f3\u8bb0\u5f55\u6570\u91cf\uff0c\u4e5f\u5c31\u662f",(0,i.kt)("strong",{parentName:"p"},"\u5408\u6cd5\u7684\u7b49\u5dee\u5b50\u5e8f\u5217\u7684\u6570\u91cf"),"\uff0c\u4f46\u662f\u8fd9\u91cc\u53c8\u51fa\u73b0\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u957f\u5ea6\u95ee\u9898\u3002  "),(0,i.kt)("p",null,"\u957f\u5ea6\u662f\u4e00\u4e2a\u5f88\u5173\u952e\u7684\u70b9\uff0c\u5982\u679c\u6211\u4eec\u8bb0\u5f55\u7684\u662f\u957f\u5ea6\u4e3a2\u7684\uff0c\u5c31\u6709\u53ef\u80fd\u591a\u7b97\uff1b\u6211\u4eec\u4e5f\u6ca1\u6709\u529e\u6cd5\u53ea\u8bb0\u5f55\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e3\u7684\uff0c\u56e0\u4e3a\u8fd9\u5fc5\u5b9a\u662f\u57fa\u4e8e\u957f\u5ea6\u4e3a2\u7684\u624d\u80fd\u63a8\u5f97",(0,i.kt)("br",{parentName:"p"}),"\n","\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u4f7f\u7528\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"HashMap<i32, (i32, i32)>"),"\u7684\u6570\u636e\u7ed3\u6784\u3002\u8fd9\u6837\u53ef\u4ee5\u7528\u524d\u9762\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"i32"),"\u6765\u8bb0\u5f55\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e3\u7684\uff0c\u540e\u9762\u7684\u6765\u8bb0\u5f55\u957f\u5ea6\u7b49\u4e8e2\u7684\u3002"),(0,i.kt)("p",null,"\u4f46\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u5751\u70b9\u9700\u8981\u6ce8\u610f\uff0c\u6211\u76f8\u4fe1\u5927\u5bb6\u4e5f\u90fd\u6ca1\u53d1\u73b0\uff1a",(0,i.kt)("li",null,(0,i.kt)("code",null,"-2",(0,i.kt)("sup",null,"31")," ","<","= nums","[i]"," ","<","= 2",(0,i.kt)("sup",null,"31")," - 1")),"\n\u8fd9\u4e2a\u6761\u4ef6\u76f4\u63a5\u5bfc\u81f4\u6211\u4eec\u5728\u8ba1\u7b97\u4e24\u4f4d\u4e4b\u5dee\u7684\u65f6\u5019\u9700\u8981\u4f7f\u7528\u6bd4",(0,i.kt)("inlineCode",{parentName:"p"},"i32"),"\u66f4\u5927\u7684\u6570\u636e\uff0c\u5426\u5219\u4f1a\u6ea2\u51fa\u3002\u6240\u4ee5\u6211\u4eec\u6539\u7528\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"i64"),"\u3002"),(0,i.kt)("p",null,"\u7136\u540e\u6211\u4eec\u5199\u51fa\u4e86\u7b2c\u4e00\u7248\u672c\u7684\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"# struct Solution;\nimpl Solution {\n    pub fn number_of_arithmetic_slices(nums: Vec<i32>) -> i32 {\n        use std::collections::*;\n        let mut dp: Vec<HashMap<i64, (i32, i32)>> = vec![];\n        let n = nums.len();\n        let mut res = 0;\n        for i in 0..n {\n            let mut nxt = HashMap::new();\n            for j in 0..i {\n                let diff = nums[i] as i64 - nums[j] as i64;\n                if let Some(value) = dp[j].get(&diff) {\n                    nxt.entry(diff).or_insert((0, 0)).0 += value.0 + value.1;\n                    res += value.0 + value.1;\n                }\n                nxt.entry(diff).or_insert((0, 0)).1 += 1;\n            }\n            dp.push(nxt);\n        }\n        res\n    }\n}\n")),(0,i.kt)("p",null,"dp\u662f\u4e00\u4e2a\u5305\u542b\u6bcf\u4e00\u4e2a\u4f4d\u6240\u6709\u4fe1\u606f\u7684\u4e00\u4e2a\u603b\u548c\u3002\n\u5728\u5bf9nums\u8fdb\u884c\u904d\u5386\u7684\u540c\u65f6\uff0c\u8bb0\u5f55\u6240\u6709\u6570\u636e\u3002  "),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"nxt.entry(diff).or_insert((0, 0)).1 += 1;"),(0,i.kt)("br",{parentName:"p"}),"\n","\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u5c31\u662f\u5bf9\u4e8e\u6240\u6709\u5728i\u524d\u9762\u7684",(0,i.kt)("inlineCode",{parentName:"p"},"nums[j]"),"\u90fd\u53ef\u4ee5\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"nums[i]"),"\u7ec4\u6210\u4e00\u4e2a\u957f\u5ea6\u4e3a2\u7684\u7ec4\u5408\u3002\u6240\u4ee5\u52a0\u5230\u4e86\u540e\u9762\u7684\u4f4d\u3002\n",(0,i.kt)("inlineCode",{parentName:"p"},"nxt.entry(diff).or_insert((0, 0)).0 += value.0 + value.1;"),(0,i.kt)("br",{parentName:"p"}),"\n","\u8fd9\u53e5\u8bdd\u7684\u610f\u601d\u662f\u5982\u679cj\u4f4d\u7f6e\u4e4b\u524d\u51fa\u73b0\u8fc7\u957f\u5ea6\u5927\u4e8e3\u6216\u8005\u957f\u5ea6\u7b49\u4e8e2\u7684\uff0c\u518d\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"nums[i]"),"\u8fdb\u884c\u642d\u914d\uff0c\u4e00\u5b9a\u4f1a\u5f97\u5230\u4e00\u4e2a\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e3\u7684\u5b50\u5e8f\u5217\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u5c06\u5176\u52a0\u5230\u524d\u9762\u7684\u4f4d\u4e0a\uff0c\u5e76\u4e14\u52a0\u5230\u7b54\u6848\u4e0a\u3002"),(0,i.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u662f\u53ef\u4ee5\u901a\u8fc7\u7684\uff0c\u4f46\u662f\u6211\u4eec\u53d1\u73b0\u4e00\u4e2a\u8981\u70b9\u3002\u5728\u6211\u4eec\u4f7f\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"(i32, i32)"),"\u65f6\uff0c\u603b\u662f\u4f7f\u7528\u5b83\u4eec\u7684\u548c\u3002\u4ee3\u7801\u4e2d\u51fa\u73b0\u7684\u53ea\u6709",(0,i.kt)("inlineCode",{parentName:"p"},"value[0] + value[1]"),"\u3002\u90a3\u4e48\u6211\u4eec\u662f\u5426\u53ef\u4ee5\u8003\u8651\u5c06\u5176\u5408\u5e76\uff1f"),(0,i.kt)("p",null,"\u5176\u5b9e\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\u5408\u5e76\u4e4b\u540e\u7684\u542b\u4e49\u5c31\u53d8\u5316\u4e86\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"HashMap<i64, i32>"),"\u8868\u793a\u7684\u5c31\u662f\u4e00\u4e2a\u7279\u5b9a\u7684diff\u4e0b\u957f\u5ea6\u5927\u4e8e\u7b49\u4e8e2\u7684\u6240\u6709\u5b50\u5e8f\u5217\u6570\u91cf\u3002\u800c\u6700\u4ee4\u4eba\u9707\u60ca\u7684\u662f\u8fd9\u597d\u50cf\u4e0d\u5f71\u54cd\u8ba1\u7b97\u3002"),(0,i.kt)("h1",{id:"rust\u4ee3\u7801"},"Rust\u4ee3\u7801"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-rust"},"# struct Solution;\nimpl Solution {\n    pub fn number_of_arithmetic_slices(nums: Vec<i32>) -> i32 {\n        use std::collections::*;\n        let mut dp: Vec<HashMap<i64, i32>> = vec![];\n        let n = nums.len();\n        let mut res = 0;\n        for i in 0..n {\n            let mut nxt = HashMap::new();\n            for j in 0..i {\n                let diff = nums[i] as i64 - nums[j] as i64;\n                if let Some(value) = dp[j].get(&diff) {\n                    *nxt.entry(diff).or_insert(0) += value;\n                    res += value;\n                }\n                *nxt.entry(diff).or_insert(0) += 1;\n            }\n            dp.push(nxt);\n        }\n        res\n    }\n}\n")),(0,i.kt)("p",null,"\u770b\u5230\u4e86\u5417\uff1f\u5176\u5b9e\u7b54\u6848\u5c31\u662f\u6211\u4eec\u5728\u8bfb\u53d6\u524d\u4e00\u4f4d\u7684\u957f\u5ea6\u4e3a2\u7684\u5b50\u5e8f\u5217\u7684\u65f6\u5019\uff0c\u52a0\u4e0a\u8fd9\u4e00\u4f4d\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8e3\u4e86\uff0c\u6240\u4ee5\u6211\u4eec\u591a\u8651\u4e86\uff01",(0,i.kt)("br",{parentName:"p"}),"\n","\u4f46\u4f60\u8981\u662f\u4e0d\u8bd5\u4f60\u6c38\u8fdc\u4e5f\u4e0d\u77e5\u9053\u81ea\u5df1\u591a\u8651\u4e86\u3002 \ud83d\ude02"))}m.isMDXComponent=!0}}]);