"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[7753],{3905:function(t,n,e){e.d(n,{Zo:function(){return s},kt:function(){return m}});var r=e(7294);function o(t,n,e){return n in t?Object.defineProperty(t,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[n]=e,t}function l(t,n){var e=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(t,n).enumerable}))),e.push.apply(e,r)}return e}function u(t){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?l(Object(e),!0).forEach((function(n){o(t,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(n){Object.defineProperty(t,n,Object.getOwnPropertyDescriptor(e,n))}))}return t}function i(t,n){if(null==t)return{};var e,r,o=function(t,n){if(null==t)return{};var e,r,o={},l=Object.keys(t);for(r=0;r<l.length;r++)e=l[r],n.indexOf(e)>=0||(o[e]=t[e]);return o}(t,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)e=l[r],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(t,e)&&(o[e]=t[e])}return o}var a=r.createContext({}),c=function(t){var n=r.useContext(a),e=n;return t&&(e="function"==typeof t?t(n):u(u({},n),t)),e},s=function(t){var n=c(t.components);return r.createElement(a.Provider,{value:n},t.children)},p={inlineCode:"code",wrapper:function(t){var n=t.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(t,n){var e=t.components,o=t.mdxType,l=t.originalType,a=t.parentName,s=i(t,["components","mdxType","originalType","parentName"]),f=c(e),m=o,k=f["".concat(a,".").concat(m)]||f[m]||p[m]||l;return e?r.createElement(k,u(u({ref:n},s),{},{components:e})):r.createElement(k,u({ref:n},s))}));function m(t,n){var e=arguments,o=n&&n.mdxType;if("string"==typeof t||o){var l=e.length,u=new Array(l);u[0]=f;var i={};for(var a in n)hasOwnProperty.call(n,a)&&(i[a]=n[a]);i.originalType=t,i.mdxType="string"==typeof t?t:o,u[1]=i;for(var c=2;c<l;c++)u[c]=e[c];return r.createElement.apply(null,u)}return r.createElement.apply(null,e)}f.displayName="MDXCreateElement"},9625:function(t,n,e){e.r(n),e.d(n,{frontMatter:function(){return i},contentTitle:function(){return a},metadata:function(){return c},toc:function(){return s},default:function(){return f}});var r=e(7462),o=e(3366),l=(e(7294),e(3905)),u=["components"],i={},a="No.414 \u7b2c\u4e09\u5927\u7684\u6570",c={unversionedId:"2021/10/No.414",id:"2021/10/No.414",title:"No.414 \u7b2c\u4e09\u5927\u7684\u6570",description:"\u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6570\u7ec4\uff0c\u8fd4\u56de\u6b64\u6570\u7ec4\u4e2d \u7b2c\u4e09\u5927\u7684\u6570 \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u6570\u3002",source:"@site/docs/2021/10/6-No.414.md",sourceDirName:"2021/10",slug:"/2021/10/No.414",permalink:"/algorithm-station/docs/2021/10/No.414",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/2021/10/6-No.414.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.284 \u7aa5\u63a2\u8fed\u4ee3\u5668",permalink:"/algorithm-station/docs/2021/10/No.284"},next:{title:"No.434 \u5b57\u7b26\u4e32\u4e2d\u7684\u5355\u8bcd\u6570",permalink:"/algorithm-station/docs/2021/10/No.434"}},s=[],p={toc:s};function f(t){var n=t.components,e=(0,o.Z)(t,u);return(0,l.kt)("wrapper",(0,r.Z)({},p,e,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"no414-\u7b2c\u4e09\u5927\u7684\u6570"},"No.414 \u7b2c\u4e09\u5927\u7684\u6570"),(0,l.kt)("p",null,"\u7ed9\u4f60\u4e00\u4e2a\u975e\u7a7a\u6570\u7ec4\uff0c\u8fd4\u56de\u6b64\u6570\u7ec4\u4e2d ",(0,l.kt)("strong",null,"\u7b2c\u4e09\u5927\u7684\u6570")," \u3002\u5982\u679c\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de\u6570\u7ec4\u4e2d\u6700\u5927\u7684\u6570\u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"[3, 2, 1]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"1",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u7b2c\u4e09\u5927\u7684\u6570\u662f 1 \u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"[1, 2]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"2",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u7b2c\u4e09\u5927\u7684\u6570\u4e0d\u5b58\u5728, \u6240\u4ee5\u8fd4\u56de\u6700\u5927\u7684\u6570 2 \u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u793a\u4f8b 3\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("strong",null,"\u8f93\u5165\uff1a"),"[2, 2, 3, 1]",(0,l.kt)("strong",null,"\u8f93\u51fa\uff1a"),"1",(0,l.kt)("strong",null,"\u89e3\u91ca\uff1a"),"\u6ce8\u610f\uff0c\u8981\u6c42\u8fd4\u56de\u7b2c\u4e09\u5927\u7684\u6570\uff0c\u662f\u6307\u5728\u6240\u6709\u4e0d\u540c\u6570\u5b57\u4e2d\u6392\u7b2c\u4e09\u5927\u7684\u6570\u3002 \u6b64\u4f8b\u4e2d\u5b58\u5728\u4e24\u4e2a\u503c\u4e3a 2 \u7684\u6570\uff0c\u5b83\u4eec\u90fd\u6392\u7b2c\u4e8c\u3002\u5728\u6240\u6709\u4e0d\u540c\u6570\u5b57\u4e2d\u6392\u7b2c\u4e09\u5927\u7684\u6570\u4e3a 1 \u3002"),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("code",null,"1 <= nums.length <= 10",(0,l.kt)("sup",null,"4"))),(0,l.kt)("li",null,(0,l.kt)("code",null,"-2",(0,l.kt)("sup",null,"31")," <= nums[i] <= 2",(0,l.kt)("sup",null,"31")," - 1"))),(0,l.kt)("p",null,"\xa0"),(0,l.kt)("p",null,(0,l.kt)("strong",null,"\u8fdb\u9636\uff1a"),"\u4f60\u80fd\u8bbe\u8ba1\u4e00\u4e2a\u65f6\u95f4\u590d\u6742\u5ea6 ",(0,l.kt)("code",null,"O(n)")," \u7684\u89e3\u51b3\u65b9\u6848\u5417\uff1f"),(0,l.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,l.kt)("p",null,"\u8fd9\u79cd\u9898\u4e00\u822c\u5c31\u5957\u4e00\u4e2a\u6709\u5e8f\u6570\u7ec4\u5c31\u884c\u3002"),(0,l.kt)("p",null,"O(n)\u7684\u8bdd\u5c31\u7ef4\u62a4\u4e00\u4e0b\u6709\u5e8f\u6570\u7ec4\uff0c\u4f7f\u5f97\u6570\u7ec4\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u4e0d\u4f1a\u5927\u4e8e\u4e09\u4e2a\u3002\u56e0\u4e3a\u5927\u4e8e\u4e09\u4e2a\u4e5f\u7528\u4e0d\u5230\u3002"),(0,l.kt)("h1",{id:"rust\u4ee3\u7801"},"Rust\u4ee3\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-rust"},"# struct Solution;\nuse std::collections::BTreeSet;\nimpl Solution {\n    pub fn third_max(mut nums: Vec<i32>) -> i32 {\n        let mut set = BTreeSet::new();\n        for item in nums {\n            set.insert(item);\n        }\n        *set.iter().rev().nth(2).unwrap_or(set.iter().last().unwrap())\n    }\n}\n")))}f.isMDXComponent=!0}}]);