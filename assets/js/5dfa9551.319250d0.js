"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[6785],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return k}});var r=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function u(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,l=function(t,e){if(null==t)return{};var n,r,l={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var c=r.createContext({}),a=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):u(u({},e),t)),n},p=function(t){var e=a(t.components);return r.createElement(c.Provider,{value:e},t.children)},s={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},f=r.forwardRef((function(t,e){var n=t.components,l=t.mdxType,o=t.originalType,c=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),f=a(n),k=l,d=f["".concat(c,".").concat(k)]||f[k]||s[k]||o;return n?r.createElement(d,u(u({ref:e},p),{},{components:n})):r.createElement(d,u({ref:e},p))}));function k(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var o=n.length,u=new Array(o);u[0]=f;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:l,u[1]=i;for(var a=2;a<o;a++)u[a]=n[a];return r.createElement.apply(null,u)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9069:function(t,e,n){n.r(e),n.d(e,{contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return i},metadata:function(){return a},toc:function(){return p}});var r=n(7462),l=n(3366),o=(n(7294),n(3905)),u=["components"],i={},c="No.326 3\u7684\u5e42",a={unversionedId:"leetcode/2021/9/23",id:"leetcode/2021/9/23",title:"No.326 3\u7684\u5e42",description:"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u5b83\u662f\u5426\u662f 3&nbsp;\u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de true \uff1b\u5426\u5219\uff0c\u8fd4\u56de false \u3002",source:"@site/docs/leetcode/2021/9/23.md",sourceDirName:"leetcode/2021/9",slug:"/leetcode/2021/9/23",permalink:"/algorithm-station/docs/leetcode/2021/9/23",editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/leetcode/2021/9/23.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.313 \u8d85\u7ea7\u4e11\u6570",permalink:"/algorithm-station/docs/leetcode/2021/8/9"},next:{title:"No.430 \u6241\u5e73\u5316\u591a\u7ea7\u53cc\u5411\u94fe\u8868",permalink:"/algorithm-station/docs/leetcode/2021/9/24"}},p=[],s={toc:p};function f(t){var e=t.components,n=(0,l.Z)(t,u);return(0,o.kt)("wrapper",(0,r.Z)({},s,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"no326-3\u7684\u5e42"},"No.326 3\u7684\u5e42"),(0,o.kt)("p",null,"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\uff0c\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u5224\u65ad\u5b83\u662f\u5426\u662f 3\xa0\u7684\u5e42\u6b21\u65b9\u3002\u5982\u679c\u662f\uff0c\u8fd4\u56de ",(0,o.kt)("code",null,"true")," \uff1b\u5426\u5219\uff0c\u8fd4\u56de ",(0,o.kt)("code",null,"false")," \u3002"),(0,o.kt)("p",null,"\u6574\u6570 ",(0,o.kt)("code",null,"n")," \u662f 3 \u7684\u5e42\u6b21\u65b9\u9700\u6ee1\u8db3\uff1a\u5b58\u5728\u6574\u6570 ",(0,o.kt)("code",null,"x")," \u4f7f\u5f97 ",(0,o.kt)("code",null,"n == 3",(0,o.kt)("sup",null,"x"))),(0,o.kt)("p",null,"\xa0"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 1\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),"n = 27",(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"true"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 2\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),"n = 0",(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"false"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 3\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),"n = 9",(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"true"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u793a\u4f8b 4\uff1a")),(0,o.kt)("pre",null,(0,o.kt)("strong",null,"\u8f93\u5165\uff1a"),"n = 45",(0,o.kt)("strong",null,"\u8f93\u51fa\uff1a"),"false"),(0,o.kt)("p",null,"\xa0"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",null,(0,o.kt)("code",null,"-2",(0,o.kt)("sup",null,"31")," <= n <= 2",(0,o.kt)("sup",null,"31")," - 1"))),(0,o.kt)("p",null,"\xa0"),(0,o.kt)("p",null,(0,o.kt)("strong",null,"\u8fdb\u9636\uff1a")),(0,o.kt)("ul",null,(0,o.kt)("li",null,"\u4f60\u80fd\u4e0d\u4f7f\u7528\u5faa\u73af\u6216\u8005\u9012\u5f52\u6765\u5b8c\u6210\u672c\u9898\u5417\uff1f")),(0,o.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,o.kt)("p",null,"\u8fd9\u9898\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u4e0d\u7ba1\u9012\u5f52\u4e0e\u5426"),(0,o.kt)("p",null,"\u9012\u5f52\u5c31\u662f\u5e38\u89c4\u60f3\u6cd5\uff0c\u4e00\u76f4\u96643\uff0c\u5982\u679c\u9664\u5f97\u53ea\u5269\u4e0b1\uff0c\u90a3\u4e48\u5c31\u662f3\u7684\u5e42\u6b21\uff0c\u5982\u679c\u8fd8\u5269\u70b9\u522b\u7684\u5c31\u4e0d\u662f\u3002"),(0,o.kt)("p",null,"\u975e\u9012\u5f52\u4e5f\u662f\u5e38\u89c4\u60f3\u6cd5\uff0c\u5e42\u6b21\u6709\u4e00\u4e2a\u7279\u6027\uff0c\u5c31\u662f\u5b83\u7684\u56e0\u5b50\u5305\u542b\u6bd4\u5b83\u66f4\u5c0f\uff08\u6216\u8005\u76f8\u7b49\uff09\u76843\u7684\u6240\u6709\u5e42\u6b21\u3002\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u9009\u51fa\u6765\u4e00\u4e2a\u53ef\u80fd\u51fa\u73b0\u7684\u6700\u5927\u76843\u7684\u5e42\u6b21N\uff08\u572832\u4f4d\u6574\u6570\u6761\u4ef6\u4e0b\u4e3a1162261467\uff09\uff0c\u5224\u65ad\u7ed9\u5165\u7684\u6570\u5b57\u662f\u5426\u662fN\u7684\u56e0\u5b50\uff0c\u5982\u679c\u662f\uff0c\u90a3\u4e48\u4e00\u5b9a\u662f3\u7684\u5e42\u6b21\u3002"),(0,o.kt)("h1",{id:"rust\u4ee3\u7801"},"Rust\u4ee3\u7801"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},"# struct Solution;\nimpl Solution {\n    pub fn is_power_of_three(n: i32) -> bool {\n        if n % 3 == 0 && n != 0 {\n            Self::is_power_of_three(n / 3)\n        } else {\n            n == 1\n        }\n    }\n}\n")),(0,o.kt)("h1",{id:"c\u4ee3\u7801"},"C++\u4ee3\u7801"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"class Solution {\npublic:\n    bool isPowerOfThree(int n) {\n        return n > 0 && 1162261467 % n == 0;\n    }\n}\n")))}f.isMDXComponent=!0}}]);