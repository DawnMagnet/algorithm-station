"use strict";(self.webpackChunkalgorithm_station=self.webpackChunkalgorithm_station||[]).push([[1984],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>k});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var o=r.createContext({}),d=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(o.Provider,{value:n},e.children)},u="mdxType",s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,o=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=d(t),m=i,k=u["".concat(o,".").concat(m)]||u[m]||s[m]||l;return t?r.createElement(k,a(a({ref:n},c),{},{components:t})):r.createElement(k,a({ref:n},c))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=m;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p[u]="string"==typeof e?e:i,a[1]=p;for(var d=2;d<l;d++)a[d]=t[d];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6635:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>s,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var r=t(7462),i=(t(7294),t(3905));const l={},a="No.583 \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5220\u9664\u64cd\u4f5c",p={unversionedId:"leetcode/2021/9/25",id:"leetcode/2021/9/25",title:"No.583 \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5220\u9664\u64cd\u4f5c",description:"\u7ed9\u5b9a\u4e24\u4e2a\u5355\u8bcd&nbsp;word1&nbsp;\u548c&nbsp;word2\uff0c\u627e\u5230\u4f7f\u5f97&nbsp;word1&nbsp;\u548c&nbsp;word2&nbsp;\u76f8\u540c\u6240\u9700\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u6bcf\u6b65\u53ef\u4ee5\u5220\u9664\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u3002",source:"@site/docs/leetcode/2021/9/25.md",sourceDirName:"leetcode/2021/9",slug:"/leetcode/2021/9/25",permalink:"/docs/leetcode/2021/9/25",draft:!1,editUrl:"https://github.com/DawnMagnet/algorithm-station/edit/main/website/docs/leetcode/2021/9/25.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"No.326 3\u7684\u5e42",permalink:"/docs/leetcode/2021/9/23"},next:{title:"No.371 \u4e24\u6574\u6570\u4e4b\u548c",permalink:"/docs/leetcode/2021/9/26"}},o={},d=[{value:"\u6b63\u5411\u601d\u7ef4",id:"\u6b63\u5411\u601d\u7ef4",level:2},{value:"\u9006\u5411\u601d\u7ef4",id:"\u9006\u5411\u601d\u7ef4",level:2},{value:"C++\u4ee3\u7801\uff08\u9006\u5411\uff09",id:"c\u4ee3\u7801\u9006\u5411",level:2}],c={toc:d},u="wrapper";function s(e){let{components:n,...t}=e;return(0,i.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"no583-\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5220\u9664\u64cd\u4f5c"},"No.583 \u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5220\u9664\u64cd\u4f5c"),(0,i.kt)("p",null,"\u7ed9\u5b9a\u4e24\u4e2a\u5355\u8bcd\xa0",(0,i.kt)("em",null,"word1\xa0"),"\u548c\xa0",(0,i.kt)("em",null,"word2"),"\uff0c\u627e\u5230\u4f7f\u5f97\xa0",(0,i.kt)("em",null,"word1\xa0"),"\u548c\xa0",(0,i.kt)("em",null,"word2\xa0"),"\u76f8\u540c\u6240\u9700\u7684\u6700\u5c0f\u6b65\u6570\uff0c\u6bcf\u6b65\u53ef\u4ee5\u5220\u9664\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u3002"),(0,i.kt)("p",null,"\xa0"),(0,i.kt)("p",null,(0,i.kt)("strong",null,"\u793a\u4f8b\uff1a")),(0,i.kt)("pre",null,(0,i.kt)("strong",null,"\u8f93\u5165:"),' "sea", "eat"',(0,i.kt)("strong",null,"\u8f93\u51fa:")," 2",(0,i.kt)("strong",null,"\u89e3\u91ca:"),' \u7b2c\u4e00\u6b65\u5c06"sea"\u53d8\u4e3a"ea"\uff0c\u7b2c\u4e8c\u6b65\u5c06"eat"\u53d8\u4e3a"ea"'),(0,i.kt)("p",null,"\xa0"),(0,i.kt)("p",null,(0,i.kt)("strong",null,"\u63d0\u793a\uff1a")),(0,i.kt)("ol",null,(0,i.kt)("li",null,"\u7ed9\u5b9a\u5355\u8bcd\u7684\u957f\u5ea6\u4e0d\u8d85\u8fc7500\u3002"),(0,i.kt)("li",null,"\u7ed9\u5b9a\u5355\u8bcd\u4e2d\u7684\u5b57\u7b26\u53ea\u542b\u6709\u5c0f\u5199\u5b57\u6bcd\u3002")),(0,i.kt)("h1",{id:"\u601d\u8def\u5206\u6790"},"\u601d\u8def\u5206\u6790"),(0,i.kt)("p",null,"\u4e24\u4e2a\u5b57\u7b26\u4e32\u6c42\u8fd9\u79cd\u7c7b\u4f3c\u7f16\u8f91\u8ddd\u79bb\u7684\u9898\u57fa\u672c\u4e0a\u7528\u4e8c\u7ef4\u52a8\u6001\u89c4\u5212\u90fd\u6bd4\u8f83\u7b80\u5355\u3002\n\u8fd9\u9053\u9898\u6709\u4e24\u79cd\u601d\u8def\uff08\u5747\u4e3a\u52a8\u6001\u89c4\u5212\uff09\uff0c\u4e00\u79cd\u6b63\u7740\u60f3\uff0c\u4e00\u79cd\u5012\u7740\u60f3\u3002"),(0,i.kt)("h2",{id:"\u6b63\u5411\u601d\u7ef4"},"\u6b63\u5411\u601d\u7ef4"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"dp[i][j]"),"\u8868\u793a\u7b54\u6848\uff0c\u4e5f\u5c31\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"word1"),"\u4e2d\u524d",(0,i.kt)("inlineCode",{parentName:"p"},"i"),"\u4e2a\u5b57\u7b26\u548c",(0,i.kt)("inlineCode",{parentName:"p"},"word2"),"\u4e2d\u524d",(0,i.kt)("inlineCode",{parentName:"p"},"j"),"\u4e2a\u5b57\u7b26\u6240\u7ec4\u6210\u7684\u5b57\u7b26\u4e32\u7684\u5220\u9664\u64cd\u4f5c\u7684\u6700\u77ed\u6b65\u6570\u3002",(0,i.kt)("br",{parentName:"p"}),"\n","\u90a3\u4e48\u8fb9\u754c\u6761\u4ef6\u9996\u5148\u662f",(0,i.kt)("inlineCode",{parentName:"p"},"dp[i][0]=i(i <= word1.length)"),"\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"dp[0][i]=i(i <= word2.length)"),"\u3002\u56e0\u4e3a\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32\u4e0e\u4e00\u4e2a\u957f\u5ea6\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"i"),"\u7684\u5b57\u7b26\u4e32\uff0c\u603b\u662f\u8981\u628a\u957f\u5ea6\u4e3a",(0,i.kt)("inlineCode",{parentName:"p"},"i"),"\u7684\u5b57\u7b26\u4e32\u5220\u7a7a\u624d\u80fd\u76f8\u7b49\uff0c\u6240\u4ee5\u8fb9\u754c\u6761\u4ef6\u5c31\u6b64\u786e\u5b9a\u3002\n\u52a8\u6001\u89c4\u5212\u7684\u8f6c\u79fb\u65b9\u7a0b\u4e3a\u4e24\u4e2a  "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dp[i + 1][j + 1] = dp[i][j] (a[i] == b[j])")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dp[i + 1][j + 1] = min(dp[i + 1][j], dp[i][j + 1]) + 1 (a[i] != b[i])"))),(0,i.kt)("p",null,"\u7b2c\u4e00\u884c\uff0c\u76f8\u7b49\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u5f53\u51fa\u73b0\u4e24\u4e2a\u76f8\u7b49\u5b57\u7b26\u7684\u65f6\u5019\uff0c\u5220\u9664\u7684\u8ddd\u79bb\u4e00\u5b9a\u4e0d\u589e\u52a0\u3002\n\u7b2c\u4e8c\u884c\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u5982\u679c\u6ca1\u6cd5\u505a\u5230\u76f8\u540c\u7684\u5b57\u7b26\uff0c\u90a3\u4e48\u5c31\u53ea\u80fd\u5728\u5220\u6389\u4e00\u4f4d\u7684\u57fa\u7840\u4e0a\u518d\u8fdb\u884c\u6bd4\u8f83\uff0c\u90a3\u4e48\u4f1a\u5728\u53d6\u6700\u5c0f\u503c\u4e4b\u540e\u518d\u52a0\u4e0a1\u3002"),(0,i.kt)("h2",{id:"\u9006\u5411\u601d\u7ef4"},"\u9006\u5411\u601d\u7ef4"),(0,i.kt)("p",null,"\u65e2\u7136\u662f\u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u7684\u67d0\u4e9b\u5b57\u7b26\uff0c\u90a3\u4e48\u7559\u4e0b\u6765\u7684\u516c\u5171\u90e8\u5206\u6211\u4eec\u600e\u4e48\u79f0\u547c\u5462\uff1f\u4ed4\u7ec6\u601d\u8003\uff0c\u4fbf\u53d1\u73b0\uff0c\u8fd9\u4e0d\u5c31\u662f",(0,i.kt)("strong",{parentName:"p"},"\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217"),"\u5417\uff01",(0,i.kt)("br",{parentName:"p"}),"\n","\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5148\u6c42\u51fa\u4e24\u4e2a\u5b57\u7b26\u4e32\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u7684\u957f\u5ea6\uff0c\u7136\u540e\u518d\u7528\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u51cf\u53bb\u6700\u957f\u516c\u5171\u5b50\u5e8f\u5217\u4e24\u500d\u7684\u957f\u5ea6\uff0c\u5373\u53ef\u83b7\u5f97\u6bcf\u8fb9\u5b57\u7b26\u4e32\u9700\u8981\u51cf\u5c11\u7684\u5b57\u7b26\u6570\u91cf\u4e4b\u548c\u3002\n\u8fb9\u754c\u6761\u4ef6",(0,i.kt)("inlineCode",{parentName:"p"},"dp[i][0]=0"),"\u4e0e",(0,i.kt)("inlineCode",{parentName:"p"},"dp[0][i]=0"),(0,i.kt)("br",{parentName:"p"}),"\n","\u52a8\u6001\u89c4\u5212\u7684\u8f6c\u79fb\u65b9\u7a0b"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dp[i + 1][j + 1] = dp[i][j] + 1 (a[i] == b[j])")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dp[i + 1][j + 1] = max(dp[i + 1][j], dp[i][j + 1]) (a[i] != b[i])"))),(0,i.kt)("p",null,"\u4e5f\u6bd4\u8f83\u597d\u7406\u89e3\u3002"),(0,i.kt)("h1",{id:"c\u4ee3\u7801\u6b63\u5411"},"C++\u4ee3\u7801\uff08\u6b63\u5411\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#define REP(i, j) for (int i = 0; i < j; ++i)\nclass Solution {\npublic:\n    int minDistance(string a, string b) {\n        int m = a.size(), n = b.size();\n        int dp[m + 1][n + 1];\n        memset(dp, 0, sizeof dp);\n        REP(i, m) REP(j, n)\n            if (a[i] == b[j]) dp[i + 1][j + 1] = dp[i][j] + 1;\n            else dp[i + 1][j + 1] = max(dp[i + 1][j], dp[i][j + 1]);\n        return m + n - 2 * dp[m][n];\n    }\n};\n")),(0,i.kt)("h2",{id:"c\u4ee3\u7801\u9006\u5411"},"C++\u4ee3\u7801\uff08\u9006\u5411\uff09"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#define REP(i, j) for (int i = 0; i < j; ++i)\nclass Solution {\npublic:\n    int minDistance(string a, string b) {\n        /*\u8fd9\u7834\u70c2\u73a9\u610f\u4e0d\u7528dp\u505a\u6211\u628a\u529b\u6263\u70b8\u4e86*/\n        int m = a.size(), n = b.size();\n        int dp[m + 1][n + 1];\n        memset(dp, 0, sizeof dp);\n        REP(i, m) REP(j, n)\n            if (a[i] == b[j]) dp[i + 1][j + 1] = dp[i][j] + 1;\n            else dp[i + 1][j + 1] = max(dp[i + 1][j], dp[i][j + 1]);\n        return m + n - 2 * dp[m][n];\n    }\n};\n")))}s.isMDXComponent=!0}}]);